<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--属性namespace 接口全路径-->
<mapper namespace="com.atguigu.gmall1213.product.mapper.BaseAttrInfoMapper">
    <!--下午：
        resultMap 标签 返回结果集 放入的返回值类型对应的属性
        id ： 表示resultMap的唯一性
        type : 返回结果集的类型 集合的泛型
        autoMapping="true" : 表示自动映射！
    -->
    <resultMap id="baseAttrInfoMap" type="com.atguigu.gmall1213.model.product.BaseAttrInfo" autoMapping="true">
        <!--id 表示主键
        property：属性名称
        column ： 字段名
        -->
        <id property="id" column="id"></id>
        <!--result : 表示普通字段-->
        <!--
                <result property="attrName" column="attr_name"></result>
        -->
        <!--
            1：n
        平台属性值集合
        private List<BaseAttrValue> attrValueList;
        -->
        <collection property="attrValueList" ofType="com.atguigu.gmall1213.model.product.BaseAttrValue" autoMapping="true">
            <!--平台属性值中 有个主键
                sql 语句中如果有重名的Id ，那么必须要起个别名！
            -->
            <id property="id" column="attr_value_id"></id>
        </collection>
    </resultMap>

    <!--select 中执行的sql 语句。-->
    <select id="selectBaseAttrInfoList" resultMap="baseAttrInfoMap">
        select
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id  attr_value_id,
            bav.value_name,
            bav.attr_id
        from base_attr_info bai
        inner join base_attr_value bav
        on bai.id=bav.attr_id
        <where>
            <if test="category1Id!=null and category1Id!=0">
                or (bai.category_id=#{category1Id} and bai.category_level=1)
            </if>
            <if test="category2Id!=null and category2Id!=0">
                or (bai.category_id=#{category2Id} and bai.category_level=2)
            </if>
            <if test="category3Id!=null and category3Id!=0">
                or (bai.category_id=#{category3Id} and bai.category_level=3)
            </if>
        </where>
        order by bai.category_level ,bai.id

    </select>

    <select id="selectAttrInfoList" resultMap="baseAttrInfoMap">
        SELECT
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
            FROM
            base_attr_info bai
            INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
            INNER JOIN sku_attr_value sav ON sav.value_id = bav.id
            WHERE
            sav.sku_id = #{skuId}
    </select>

</mapper>